Suprise is all you need
利用信息论的工具来定性解释游戏内容量，惊喜总量，可探索空间大小和耐玩性之间的关系。

Dirac Institute of Game
狄拉克游戏研究所

李(YagaoDirac)瀚洋

原文地址：https://github.com/YagaoDirac/Internal-Reference-of-Dirac-Instutite-of-Game/blob/master/2022/Suprise%20is%20all%20you%20need.txt
欢迎在我的github上留言。


【【【写作背景】】】
从1948年开始，信息论成为了一个很重要的数学的分支，它的结论得到了广泛的应用，从人们比较熟悉的人工智能，到不怎么熟悉的理论物理，都有很多应用。
我本人玩了很多不同种类的游戏，对很多问题有很多直觉层面的经验解释，但是一直没有一个很成熟的定量的方法来解释这些经验，直到最近接触了信息论，我觉得完全可以直接套用信息论的数学工具。


【【【用词解释】】】
文中牵扯的用词会比较灵活，但是其实并没有几个概念。
根据数学层面的定义，熵是惊喜的数学期望值，表示的含义是信息总量。惊喜的定义是概率的负对数。具体公式在后面有。
我在文章使用的所有词，只要是xx熵，就是指的惊喜的数学期望值，有时候是写的信息熵，有时候是写的总熵，或者条件熵，如果不知道他们的具体含义，不会影响理解文章的内容。
另外，我在文中使用了“块”表示对应于概率论里面“互斥事件”的概念，用“环节”表示概率论里面“独立发生的事件”的概念，从而和电子游戏的实际情景尽量接近，方便理解。他们的数学层面的行为和他们数学层面的原型完全一致。
特殊的，当一个熵是条件熵时，它计算的是不同的块所构成的大块的熵。如果不在意具体的计算过程的话，可以把它和其他的熵当成相同的概念来理解。
惊喜和信息可以认为是相同的概念的不同的具体表现形式。文中未做具体区分。


【【【关于信息论】】】
本文的定量讨论非常少，也都很简单，也不打算过多的深入数学的部分。
阅读本文需要知道一些基本的信息论的知识。
熵，entropy，通常使用大写H表示，有2个解释，可以作为一个体系的混乱程度的度量，也可以作为获得惊喜的数学期望值。H的公式是
H === sum(p[i] * log(1/p[i]) )
通常简化为 H === -sum(p[i] * log(p[i]) )
其中，p[i]是第i个事件发生的概率。
根据信息论的传统，对数函数的底数不重要，采用不同的底数的时候，最终的值之间只相差一个常熟比例，无论采用哪个底数，对结果不产生任何的影响。本文采用的是以2为底数的对数函数，和信息论的传统一致。
稍微解释一下为什么是log(1/p[i])，当一个事情发生的概率很小的时候，一旦发生，惊喜就特别大，而当一个大概率会发生的事情发生的时候，惊喜很小。当一个一定会发生的事情发生的时候，没有惊喜。
具体来说，
当 p === [1], H === 0.
当 p === [1， 0], H === 0.注意，此时第二种结果发生的可能性是0，这一项是没有意义的，所以这个分布应该塌陷为第一个分布，也就是[1]。
当 p === [0.9999, 0.0001], H 约等于 0.
当 p === [0.5, 0.5], H === 1
当 p === [0.9997, 0.0001, 0.0001, 0.0001], H 约等于 0.
当 p === [0.25, 0.25, 0.25, 0.25], H === 2
当一个随机事件包含的可能性不变时，所有事件有相同的概率的时候，H最大,例如上面的[0.5, 0.5]和[0.25, 0.25, 0.25, 0.25]，分别是2种情况和4种情况的得到最大H值的概率分布。
对离散型随机变量，将任何一个可能的结果拆成2个不同的结果，总共的可能性数量+1，H一定时增大的。通常来说，不考虑极端取值的特殊情况下，可能取值越多的分布，其熵越高，但是这个细节无法严格的从数学上证明，所以在使用的时候还是需要稍微根据经验判断一下。

本文不讨论连续分布的情况。
本文也不提供条件熵的计算方法。可以自行找资料，不难。

此外还有一个需要稍微说明一下，就是条件概率的熵。我就不说具体的细节了，如果有兴趣可以网上找教程，证明并不难。
p1和p2的熵分别是H1和H2。p_1_and_2是先确定一次p1，再确定一次p2，并作为整体考虑的一个分布。它的熵是H_1_and_2。当p1和p2固定不变时（H1和H2也就固定不变），p1和p2相互独立的时候，H_1_and_2最大。p1和p2越相关，H_1_and_2越小。
这个结论可以推广到有n个随机事件的情景，总之就是，他们互相的关联性越大，联合分布的熵就越小，换句话说，就时如果新加进来的分布和以及在考虑范围里面的分布有太大的关联性，那么最终这个整体所表现出来的熵就不会变大多少。

另外还有一个值得注意的是，从有2个结果的平均分布的情况，增加到4个结果平均分布，熵的最大值从1变成了2，之后，如果还要按照这样的方式把熵增加到3，需要从4个结果增加到8个结果，公式是2的n次方。

稍微总结一下。当制作一个新的资源，并加入到游戏项目中，这个新加入游戏的资源给游戏的总信息量的增加，当这个新资源独占一个环节的时候，不会带来任何增加。当加入到只有少数几个元素的已有的环节时，当这个环节的元素出现的概率分布尽量均衡的时候，熵会有一些增加，当新加入的元素时小概率事件的时候，熵几乎不会增加，当新加入的元素挤占了原来的一个大概率出现的元素的时候，熵的增加比较明显。当这个环节已经有很多的元素的时候，无论什么情况，熵的增加都很小。
所以，如果要增加一个新的环节，请一次至少加2个元素进去，而且让他们的分布尽量平均一些，2个初始元素中可以有一个是空白，比如一个加攻击力的什么戒指，也可以不戴，这样也可以形成2个元素。如果一个已有的环节里面已经有很多元素了，请尽量不要往里面增加任何新的元素。增加的新的环节应该尽量不依赖已有的环节，他们里面的元素之间的相关作用越小越好。


【【【熵的直观解释】】】
熵最核心的意义就是惊喜的数学期望值。一个事情如果只有2个结果，熵最大也就只有1，但是如果一个事情有128个结果，熵的最大值可以达到7，平均来说，可以给出7倍的惊喜，相较于前面的只有2个结果的事情。
熵还有一个意义就是，表达一个特定信息所使用的二进制序列长度的最小值，或者说，一个信息的信息量。
有时候玩游戏的时候，如果用户感觉到无聊，有一种情况是发现游戏过程的信息增量没有了，永远都在玩一样的内容了。这种时候，如果用户消耗干净了这些固定内容的新鲜感，后续过程就会非常无聊。之前有一个学说是，用户会开始怀疑，怀疑自己是不是在做没有意义的事情，但是如果我们用信息量的角度来看这个问题，那么结论可能会更清晰一些。
换句话说，用户使用一个游戏产品的过程，就是消耗这个游戏的信息熵的过程。一个耐玩的游戏，需要有一个足够大的信息熵总量，而且在整个过程中，在几乎任何一个时间点上，都给出足够多的信息，保证用户所消耗掉的部分是小于已经给出的总量的，而且还要有一段距离。只有这样，用户才能一直觉得这个游戏还有东西可以挖掘，可以探索，才有可能一直有新鲜感，才耐玩。而且只有信息量（惊喜总量）足够多，才有可能反复的给出惊喜，而不是指望着在剧本的几乎最后的地方来一个尽量合理的天外救兵。
另外还有一个解释方法，如果计算 2的H次方，那么对于平均分布来说，结果就是结果的个数，比如对[0.5, 0.5]，2的H次方是2。对[0.1（10个）]来说，2的H次方是10。但是对不均衡的分布，这个值会减小。也就是说，不同内容出现的概率不均衡的话，平均的可探索的内容，或者说可尝试的情景会减少。这个推论可能不正确，但是似乎可以帮助打开思路。


【【【简单举例】】】
就以动作游戏为例。
环节有，攻击，敌人。
具体来说，攻击有近距离，远距离，和特殊魔法，如果他们出现的概率分别时0.8，0.1，0.1，那么记作：攻击 === [0.8, 0.1, 0.1]。这个环节的熵，记作 H攻击 === 0.92.
类似的，如果敌人总共有6种小怪，6个boss，概率分别是[0.3, 0.3, 0.2, 0.1, 0.06, 0.04, 0.002(6个boss都是0.002)]，那么 H敌人 === 2.36.
在攻击不同的敌人的时候，具体采用的攻击方式会有一些变化，对攻击环节的熵的影响比较难估算，姑且认为有增加也有减少，姑且认为相互抵消。
那么，这个只有2个环节的游戏，熵的值是3.28。
如果额外考虑上场景，就算4个，出现的概率依次为0.1到0.4，H场景 === 1.85。
因为场景和敌人很大程度上是有相关性的，所以实际的联合分布的熵应该会比直接加起来的值要小一些。因为量化实在太麻烦，这个地方就不考虑这个细节了。
那么，这个只有3个环节的游戏，熵的值是5.13。

如果在这个游戏的基础上做一些调整，比如让3个攻击方式出现的概率一样，那么 H攻击 就从0.92变成了1.58。如果只使用6个普通的小怪，并且让他们出现的概率尽量均衡，比如[0.2 4个，0.1 2个]，那么 H敌人 就从2.36变成了2.52。在不考虑两个环节的相关性的情况下，整个游戏的熵从3.28，提高到了4.1，换句话说，整个游戏的惊喜量提升了25%。而且还少制作了6个boss。

但是实际上，在战斗的过程中，不同的敌人和不同的攻击方式是有比较明确的对应关系的，两个环节的关联性是非常高的，这会导致联合熵大幅度降低，这个问题在后面不同类型游戏的熵的对比的环节会具体说。


【【【不同游戏类型的熵的比较】】】
现在，你已经知道了游戏中的信息熵应该怎么估算，这个信息熵的意义是什么。如果不知道，请联系我，肯定是我这个文章写得有问题，毕竟有点久没写东西了，生疏了。

我一直觉得在我玩过的游戏当中，偏建造类的游戏总体来说更耐玩，偏殴打题材的游戏明显更不耐玩。我觉得可以从信息熵的角度来直观的描述。
定量数据根据我的经验估算。

【【建造类，以Factorio（异星工场）为例】】
建造类游戏的粗略的定量，以Factorio（异星工场。还有一个名字类似的，叫异形工厂，类型是非常相近的，我也很喜欢也很熟悉）为例，选择理由是熟悉（熟悉得可怕）。
Factorio的环节至少有，物流，仓储，制造（把一些物品转换成其他物品），能源，科研，角色成长，战斗，敌人。
物流有3种，传送带，自动机器人，铁路。3种可以说完全不一样，很多时候是共存的。根据经验，出现概率基本接近，只有传送带偏少，估算为[0.2, 0.4, 0.4], H === 1.52.
仓储的情况整体偏少，更多的是在特定情景下，利用游戏提供的基础原件自行组合而来。那么，在冶炼之前的仓储有，不使用，大型缓冲，基于传送带的分拣，基于机器人的分拣4种，比例大概是[0.9, 0.1, 0.02, 0.01](未归一化), H === 0.67.在冶炼区和后续环节之间偶尔会有一些小的缓冲，出现概率可能是0.1，H === 0.47.
制造环节基本是固定的，所有物资都要有，我有印象的有专门说法的区域大概有15个左右，个别的结构有超过1种流行处理方案，不过不想展开得太细，就直接按照[1,1,1,2,2,2,3,3,4,5,10,20,30,40,50]（未归一化）这样估算，H === 2.99。这一项就2.99，好夸张，难怪很多人把这一类的游戏描述为“mega base building”，建造超级基地。另外，如果按照等概率分布，熵值可以达到3.91，如果按照[1,2,3,...,15]，熵是3.67.也就是说，单一一个低成本的，可以做非常多元素进去的环节，其实是可以给游戏带来非常巨大的信息量的。
能源，有火电，太阳能和核电，出现概率基本是[0.8,0.1,0.1], H === 0.92
科研的话，怎么说呢，我记得总共有120项，可能记错了。实际上经常用到的总共也就30项。不过这种估算方法没有什么用，不如按照大的方向来估算，那可以分为，科技，物流，战斗，产能，概率大概是[10,1,1,0.1](未归一化), H === 0.88.
角色成长部分很薄弱，基本可以认为没有，那么按照没有，和有0.9和0.1估算, H === 0.47.
战斗部分可以大致分为，利用炮台进行的防守，利用装备进行的移动战斗，利用载具进行的移动战斗，和利用重炮的超远程定点清除。最后一项非常罕见，那么按照[0.9, 0.05, 0.05]估算,H === 0.57.
敌人基本就是移动的和固定的，我觉得这一项不重要，不考虑进来。

那么总结起来，非战斗部分总共有7.45，战斗部分有1.04。如果非战斗部分占90%，战斗部分占10%，H === 0.47,那么，根据条件熵，最终游戏的总熵是7.24。实际上战斗部分的内容还受基地建设的部分的影响，所以也是有一定的关联性的，最终的实际的熵应该会稍微低于7.24。
实际上从玩法层面，还有包括利用mod来引入新的内容，速通，特殊结构设计，甚至写mod一类的非常规玩法，不过概率很小，就不展开讨论了。
我觉得已经可以得出一些结论了，这个游戏的熵最大的情况是完全不开启战斗的内容。这也就直接解释了为什么在完全关闭战斗内容的情况下，这个游戏也可以正常玩，甚至还比有战斗的情况更有趣，至少对我来说是这样，当然这个还要看用户的偏好，在此不展开。
还有一个很重要的结论是，如果增加一个变化，这个变化出现的概率是10%，那么这个变化给最终的总熵带来的变化，首先是一个H[0.9, 0.1] === 0.47的增加，然后是，原有的熵会损失10%。如果新引入的内容本身熵为0，那么当原来的内容的熵高于4.7的时候，这会导致熵降低。也就是说，引入一个熵很低的系统，穿插在主系统里面出现，但是新引入的系统和原有的系统不是环节的关系，而是互斥的，只能同时出现一个的时候，这有可能会导致总熵降低。或者至少从边际收益的角度来说，这很可能是很不划算的。所以不如一个游戏就做一个系统，里面的所有方面都是不互斥的环节，可能比较好。

【【动作类，以Witcher3（巫师3）为例】】
动作游戏以猎魔人3为例，选择理由还是熟悉。
猎魔人3的环节主要有，战斗，战斗又分，常规战斗和特殊情景限制条件下的战斗。常规战斗又要分，直接战斗，药水，武器涂油，魔法。之后是，敌人，场景。此外是昆特牌，交易，合成，剧情，剧情里面又要分很多细节。
我感觉要画一个树状图。
不过也有一个问题，就是如果按照网上能找到的一个推荐的加点，至少我见过有2个视频里面是用的那一套加点，那么战斗的部分就是拉开距离，等cd，喷火，喷到差不多了，上去砍两刀。整个战斗过程几乎没有任何新内容。我觉得人们采用这个策略的概率不会低，因为游戏里面还有洗点的药水，等感觉到压力以后，很可能就会网上查攻略，最后就变成这样的加点了。我当时就是。犹豫那个洗点的药水特别贵，而且根本找不到，所以基本上只可能是在网上找一个推荐加点，然后固定下来。如此看来，我觉得可能要给这个策略一个很大的概率。
说明，写了概率的，是分支结构，没有写的是叠加的环节。分别对应条件熵，和，联合熵的计算方法。

总熵3.78
1.战斗（15%,5.31
1.1.常规战斗（95%，5.22
1.1.1.战斗内（4.8，但是明显偏高了）
1.1.1.1.所有的战斗策略(2.3)
1.1.1.1.1.枯燥但有效的策略（20%,0.81
1.1.1.1.2.躲闪和攻击交替的，偶尔放放技能的策略（80%,1.77
1.1.1.2.敌人和掉落物(2.5)
1.1.2.战斗外（0.42）
1.1.2.1.武器涂油(0.34)
1.1.2.2.药水（0.08）
1.2.特定情景战斗（5%,1.3
1.2.1.拳击（85%,0.81
1.2.2.教双胞胎姐姐剑术（15%，0
2.昆特牌（10%,1.58
3.物品系统（5% 0.97
3.1.交易(99%0.9)
3.2.合成（1%0
4.剧情（25% 3.21
4.1.对话的场景(1.17)
4.2.对话的角色(2.04)
4.3.对话的内容（0）
5.赶路等垃圾时间（45% 0


具体展开。
1.战斗（15%,5.31
1.1.常规战斗（95%，5.22
1.1.1.战斗内（4.8，但是明显偏高了）
实际上，敌人的种类和战斗策略是有很大的相关性的，如果直接相加，这个值肯定会偏高。不过暂时不知道应该怎么修正。
1.1.1.1.所有的战斗策略(2.3)
枯燥但有效的策略在某些压力很大的情况下是无法使用的，但是这种情况都很少,更多的时候我会因为效率问题而使用一些比较花的操作。所以总体而言我还是给他20%的概率
1.1.1.1.1.枯燥但有效的策略（20%,0.81
这个就是前面提到了的，拉开距离，喷火，喷火已经可以解决很多问题了，剩下的就不多了。这其中75%的时间是在等喷火的cd，剩下就是稍微砍一下半死不活的敌人，所以我给这个部分[0.75, 0.25], H === 0.81
1.1.1.1.2.躲闪和攻击交替的，偶尔放放技能的策略（80%,1.77
这个策略是我最开始用的，实际上不是为了得到更有趣的战斗，而是在完全不看攻略的情况下，技能面板上面根本无法得到有用的信息，而技能点一旦加下去，是无法返还的，除非是加下去，测试清楚，然后读档，但是那样太麻烦了。所以可以认为是随机的加的技能。
这种情况的战斗确实会用到很多不同的内容，60%的时间是在砍和躲避，剩下的时间是5个技能和弩，H === 1.77
1.1.1.2.敌人和掉落物(2.5)
敌人的种类大概有（括号内为实际遇到的概率，按照战斗持续的时间加权，未归一化），人类近战（100），人类远程（20），人类有盾牌（5），食尸鬼（12），孽鬼（30），水鬼（15），沼泽女巫（1），鬼魂（5），巨像（0.5），狼（1），熊（1），以及一些很小概率出现的boss（每个算2，大概有5个？）。他们基本有对应的掉落物，所以掉落物本身不带来任何的额外的熵。
最终结果是2.5
1.1.2.战斗外（0.42）
1.1.2.1.武器涂油(0.34)
就我的经验来说，95%的时候不用油，只有极个别的时候稍微用一下，总共好像也就用过2种，那就每个算2.5%吧。H === 0.34
1.1.2.2.药水（0.08）
游戏里面油一些回血的，题材来说是食物，不过不重要，基本感觉不到有什么区别，应该是几乎0熵的一个环节。其他的药水，可以增加一些特殊效果，我用过的好像就只有一个增加1分钟夜视的，别的应该还有一个，但是不记得了。姑且按照99%的时候不用，1%的时候用来估算吧。结果是0.08
1.2.特定情景战斗（5%,1.3
1.2.1.拳击（85%,0.81
75%的时候在躲，25%的时候在疯狂的按鼠标，
1.2.2.教双胞胎姐姐剑术（15%，0
忘了具体细节了，反正就是先挡住，然后反击就对了，约等于0熵吧。
2.昆特牌（10%,1.58
老实说，没什么印象了。
我记得里面有一些机制，比如有一些牌，如果出现超过一张，那么每一张的分数都会加一，比如一张1分，2张一起给出来，总共就是4分。还有一些是给同一行的所有自己的牌都加一分，还有让对方的某一行的牌都只算1分，还有什么可以从用过的牌里面复活一张，总的来说，我感觉可能大概是几个战术，具体细节都是次要的。具体来说，1，利用天气降低对方的分数，2，某些牌可以出提高自己的分数，3，绝对高分的单张的牌。3个概率差不多，就按[1/3(3个)]来估算，结果是1.58
3.物品系统（5% 0.97
3.1.交易(99%0.9)
一大半的时候就是很普通的小贩，基本只能买到食物，几乎没有什么区别。铁匠铺很少，基本都在固定的地方，而且里面有用的东西也就那么1，2个，最多算一个H[0.5, 0.5] === 1，而且其实也不怎么需要。偶尔会遇到草药商人，还多少有点意思，里面内容非常丰富，可以逛上一会儿，就按3估算吧。这3种情况的时间比例大概是100：10：5，按条件熵计算是0.9
3.2.合成（1%0
我只记得有这个功能了，不记得细节了，而且不怎么用。我觉得可以给0.
4.剧情（25% 3.21
4.1.对话的场景(1.17)
私人空间或者野外等没人的地方70%，城市街道和酒馆20%，皇宫一类的很漂亮的地方10%
4.2.对话的角色(2.04)
我能分得清的，大概只有，诗人（Dandyline）100，矮人（名字忘了）100，比较胖的间谍30，Tricy 30，Yenefar 50，另外还有3个Witcher 50 3 3，各种求救的陌生人，我觉得应该把这些路人放在一起讨论，反正总对话量估算一个500，这样算下来，2.04
4.3.对话的内容（0）
对话的内容基本和对话的角色高度相关，估算不单独增加额外的熵。
5.赶路等垃圾时间（45% 0
既然以及是垃圾时间了，那就0吧。

一个很有趣的细节就是，如果把上面的表稍微简化一下，结论就会很清晰。
总熵3.78
1.战斗（15%,5.31
1.1.常规战斗（95%，5.22
1.1.1.战斗内（4.8，但是明显偏高了）
1.1.2.战斗外（0.42）
1.2.特定情景战斗（5%,1.3
2.昆特牌（10%,1.58
3.物品系统（5% 0.97
4.剧情（25% 3.21
4.1.对话的场景(1.17)
4.2.对话的角色(2.04)
5.赶路等垃圾时间（45% 0
整个表里面最高的熵是战斗的5.31，它主要来自常规战斗的5.22。如果：
单独去掉"2.昆特牌"        总熵是   3.51
单独去掉"3.物品系统"      总熵是   3.63
单独去掉“5.赶路等垃圾时间” 总熵是   5.07
这样看来，巫师3最大的问题是赶路，空跑。当然我对这个给估算是直接给了0的熵，如果不是0的话，数据上的对比可能不会那么夸张，但是我觉得依然是一个需要极大的压缩的部分。如果，赶路的部分的时间压缩到本来的
1/2，  总熵是  4.47
1/5，  总熵是  4.95
1/20， 总熵是  5.11(注意，这个值比直接去掉这一部分要高)

而且关于赶路，还有一个说法，就是我找到过一个修改器（trainer），里面可以改一大堆东西，但是就是没有任何的可以加速赶路的功能，真实无比的尴尬。

这个估算还可以解释一些相关的问题，就是动作类游戏的熵的主要组成部分就是战斗系统，所以理论上是可以单独做战斗系统作为一整个游戏的唯一内容的。

多说一句，我玩过猎魔人的2，3，本体的主线，所有支线，全部过干净，所有对话全部过干净，除了最后没搞死狂猎。我真正喜欢的是那样一个厚实的世界观，一种深度旅游的感觉，这是我真正想要的，包括我接触trpg也是想要这一块的体验。我不怎么喜欢猎魔人的战斗系统，我觉得没什么意思，至于什么合成，还有昆特牌，纯粹就是为了研究这个游戏才认真的去试试看。即使剧情系统的熵，按这个估算下来只有3.21，我依然觉得非常好，甚至我觉得可能低估了，如果考虑上民风民俗那些，可能还要高一些。
而我玩factorio的时候基本是从来不开战斗内容的。Factorio的设定也很有意思，游戏自带一个选项，可以一键完美的把整个战斗系统屏蔽掉。而且，真的超耐玩，我
我的witcher3的时间是149小时（顺便，2的时间是33.6小时）。factorio的时间是1064.3小时（截至第一次写这篇文章的时候）。游戏时间比例，factorio除以 巫师3是7.14倍，估算出来的熵的差异是7.24-3.78 === 3.46. 2的3.46次方是 11, log(7.14, base === 2) === 2.84，而根据前面估算的环节，我对factorio的估算可能有点偏高，而对witcher3的估算可能有点偏低。如此一来，基本可以认为这个基于信息熵的估算方法是多少有可能正确的。


【【【具体的技巧】】】
首先还是回到熵的数学公式上，我先解释一下什么是互斥吧，就是当其中一个出现的时候，其他的一定不出现，就像抛硬币，只可能得到正面或者反面，不可能两个同时得到。例如上面的factorio里面，战斗的时候一定不是在建造基地，建造基地的时候一定不是在战斗，巫师3里面的战斗，合成，对话，昆特牌，也是类似的关系，可以认为是一个骰子的4个面，一定是4选1。而我说的环节，则类比于抛硬币两次，无论这两次的结果是不是有关联性，关键是他们都是一个单独的概率事件。具体不展开了，还不懂的话可以找点正儿八经的概率方面的资料来读一下。
给游戏搭系统的时候：
第一个要小心的事情就是，不要让内容太互斥，尤其是在特别高阶的地方。比如刚刚对比的两个游戏，factorio的第一阶只有2块，而witcher3的第一阶有5块。这个互斥的核心问题是，并不是所有的这种等级的块，都可以有很高的熵，而低熵的块有可能反而会降低总熵。如果一定会出现很多个高阶的互斥的块，请让低熵的块所真实运行的时间尽量低，或者如果所使用的加权方式不是按时间，那么无所谓，反正就是低熵的块尽量低权重，从而有可能提高总熵，或者至少保护总熵。当然从开发的性价比来说，高阶互斥块太多了不是什么好事。
第二个需要注意的事情是，打开思维，放飞自我，太局限的思维会导致不同的环节的关联性特别高，从而导致新环节对总熵的贡献变小。说一个极端的情况，比如有一个环节有10个元素，另外一个环节的10个元素依赖之前环节的10个元素，而且是一一对应的关系，那新的环节对总熵的贡献就只存在到底是有还是无，也就是额外贡献1，而不是log(10 + 1,base === 2) === 3.46。辛辛苦苦做了半天，应该考虑一下怎么把总熵提高到最大。
第三个需要注意的事情是，元素之间出现的概率尽量接近。这个就是纯粹的数学上就可以得到的结果，这可能也就是“数值平衡”真正给游戏带来贡献的地方。我还有一个想写的，就是数值平衡被滥用了，应该如何修正，暂时思路还不成熟，以后再说。

具体到操作层面：
1，一个游戏做一个事情，尽量不要摊太开，减少顶级块。动作游戏甚至可以没有剧情，砍就完事。建造类游戏可以没有战斗，比如shapez.io。
2，无论是环节，还是块，只要可以用很低的成本堆元素的数量的，一定要堆，堆到32个，熵就有5了，性价比非常高，当然这种差异化不一定有效。如果光是靠文字描述，一个可以在网上找到的cc0的图标就可以堆起来的，请坚决堆。
3，除了攻击力，攻速，攻击距离，效果范围，冷却时间一类的常规属性，可以考虑一下一些非常规的属性，比如血量低于一半的时候，血量在20%到40%之间的时候，aoe的形状也不一定必须是规则的形状，理论上是可以是任何的形状的。甚至属性数值可以在一个范围内波动。不要去想合理的东西，写实的模拟器式的设计如果不能带来熵，就无法带来耐玩性和惊喜量。甚至再考虑到图形化的表达的可能性，有很多东西都应该重新思考。
4，剧情是一个好东西，请从社会结构，宗教，社交，一类的方向去思考，而不是到底是好人赢了还是坏人赢了。也就是说，剧情上面可以有很多个环节，注意我说的是环节，不是块。社会组织形式到底是阶级式还是协议式，还是某种混杂的状态。宗教的具体形式，共享单最高神，还是不共享单最高神，神所掌柜的内容，神的性别，神职人员的性别，具体的意识，创世神话的各种具体细节，人的来源的宗教解释。父系氏族还是母系氏族，守贞操吗，婚姻的稳定性与人数安排，人们是好战还是不好战，用什么民间故事吓小孩，用什么民间故事劝善。宗教对前世的解释，对善恶的解释。不同的民族之间应该有相似的神话体系，包括神的名字应该是相近的，但是他们各有侧重，而且有时候会在传播过程中，把1各神变成2个，或者把2个合并成一个。包括神之间是怎么“不经对方允许强行发生x关系”的。草药学的理论基础，可以参考一下中医的那些理论。也就是说，如果以为剧情就是好人和坏人轮流占上风，那多半是阅读量的问题。如果真的按我说的这个体系，我觉得光是世界观，应该能搭出熵超过10的体系，这可能就已经可以支撑一个作品了。如果有这种作品，请一定要推荐给我，谢谢。
5，凡是数值属性，考虑一下随机生成。
6，敌人的行为，不一定永远是在追杀用户角色。《零》系列（英文名 fatal frame）里面，根据我的印象，有攻击性的鬼是不到一半的。敌人可以做各种奇怪的事情。敌人的弹道也不一定必须是直线，可以不用瞄准用户角色，记住，打开思路，放飞自我。
7，音乐上，可以把一个音乐拆成几轨，然后用代码控制随机组合。
8，贴图，无论是贴图还是贴花（UE4里面叫decal），都可以随机的加一些东西上去。
9，制作不同的攻击方式往往需要从代码到美术的努力，用这个来互斥的元素，成本可能会比较高。而把攻击拆成传统的那些属性，又会因为各种属性之间有很多的配合，造成环节之间有很强的关联性，从而无法很好的提高熵。不如从画面表达的可能性出发，而不是数值平衡。
10，所有用户无法控制的随机事件，都尽量不要平衡，在一个合理范围内就行，给随机性给满，这个往往成本不高。
11，可以反复刷的地方，每次敌人刷新的地点，内容，数量，都随机，甚至敌人的行为，都随机。大致控制一下范围就行了。
12，同样是数值属性，可以全局买升级，可以在每个地图上买，可以在角色上买，可以在每一轮开始的时候随机，可以根据当时的时间日期伪随机，可以在地图里面随机掉落（就是离开地图就消失的那种一次性的）
13，把血量，甚至其他状态数值，分成几段，给每一段一些特殊说法，比如一些属性在特定的血量比例的时候效果翻倍，甚至翻好几倍。
14，现在的不同的游戏模式之间，建造物流类的熵是最高的，动作类其实很低，我是真的推荐开发人员去玩一点那种熵特别高的游戏，特别耐玩的，找一下原因。
15，mod系统可以引入很多变化，能提高熵。
16，会反复出现的动画上，尤其是辨识度特别高的，面积大的，在不干扰游戏核心内容的情况下，在不带来巨大成本的情况下，尝试引入随机，不要每次都一个样子。甚至包括音效。




暂时就想到这么多。
有什么建议欢迎给我说。


























